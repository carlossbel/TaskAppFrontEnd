{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practicas\\\\taskmanage\\\\frontend\\\\src\\\\routes\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/routes/ProtectedRoute.jsx\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport AuthService from '../services/authService';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  adminOnly = false\n}) => {\n  _s();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  useEffect(() => {\n    // Verificar autenticación\n    const checkAuth = () => {\n      const isAuthenticated = AuthService.isAuthenticated();\n      if (!isAuthenticated) {\n        setIsAuthorized(false);\n        setIsLoading(false);\n        return;\n      }\n\n      // Si requiere rol de admin, verificarlo\n      if (adminOnly) {\n        const isUserAdmin = AuthService.isAdmin();\n        setIsAuthorized(isUserAdmin);\n      } else {\n        // Usuario normal autenticado\n        setIsAuthorized(true);\n      }\n      setIsLoading(false);\n    };\n    checkAuth();\n  }, [adminOnly]);\n  if (isLoading) {\n    // Mostrar un spinner mientras verifica\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthorized) {\n    // Redirigir a login si no está autorizado\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si está autorizado, renderizar los hijos (componente protegido)\n  return children;\n};\n_s(ProtectedRoute, \"JWPXazeYmnuBHCK+Mmy9GQs2Fy4=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","AuthService","Spin","jsxDEV","_jsxDEV","ProtectedRoute","children","adminOnly","_s","location","isLoading","setIsLoading","isAuthorized","setIsAuthorized","checkAuth","isAuthenticated","isUserAdmin","isAdmin","style","display","justifyContent","alignItems","height","size","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Practicas/taskmanage/frontend/src/routes/ProtectedRoute.jsx"],"sourcesContent":["// frontend/src/routes/ProtectedRoute.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport AuthService from '../services/authService';\r\nimport { Spin } from 'antd';\r\n\r\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\r\n  const location = useLocation();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthorized, setIsAuthorized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Verificar autenticación\r\n    const checkAuth = () => {\r\n      const isAuthenticated = AuthService.isAuthenticated();\r\n      if (!isAuthenticated) {\r\n        setIsAuthorized(false);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Si requiere rol de admin, verificarlo\r\n      if (adminOnly) {\r\n        const isUserAdmin = AuthService.isAdmin();\r\n        setIsAuthorized(isUserAdmin);\r\n      } else {\r\n        // Usuario normal autenticado\r\n        setIsAuthorized(true);\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [adminOnly]);\r\n\r\n  if (isLoading) {\r\n    // Mostrar un spinner mientras verifica\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh' \r\n      }}>\r\n        <Spin size=\"large\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthorized) {\r\n    // Redirigir a login si no está autorizado\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Si está autorizado, renderizar los hijos (componente protegido)\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,eAAe,GAAGd,WAAW,CAACc,eAAe,CAAC,CAAC;MACrD,IAAI,CAACA,eAAe,EAAE;QACpBF,eAAe,CAAC,KAAK,CAAC;QACtBF,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;;MAEA;MACA,IAAIJ,SAAS,EAAE;QACb,MAAMS,WAAW,GAAGf,WAAW,CAACgB,OAAO,CAAC,CAAC;QACzCJ,eAAe,CAACG,WAAW,CAAC;MAC9B,CAAC,MAAM;QACL;QACAH,eAAe,CAAC,IAAI,CAAC;MACvB;MAEAF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,IAAIG,SAAS,EAAE;IACb;IACA,oBACEN,OAAA;MAAKc,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,eACAF,OAAA,CAACF,IAAI;QAACqB,IAAI,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;EAEA,IAAI,CAACf,YAAY,EAAE;IACjB;IACA,oBAAOR,OAAA,CAACL,QAAQ;MAAC6B,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAErB;MAAS,CAAE;MAACsB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,OAAOrB,QAAQ;AACjB,CAAC;AAACE,EAAA,CAnDIH,cAAc;EAAA,QACDL,WAAW;AAAA;AAAAgC,EAAA,GADxB3B,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}