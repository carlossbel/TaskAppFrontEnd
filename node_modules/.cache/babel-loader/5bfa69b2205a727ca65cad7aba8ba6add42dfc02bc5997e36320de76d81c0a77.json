{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practicas\\\\taskmanage\\\\frontend\\\\src\\\\Pages\\\\AdminGroups\\\\AdminGroupsPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/AdminGroups/AdminGroupsPage.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Table, Card, Button, Space, Modal, Form, Select, message, Tooltip, Typography, Input, Popconfirm, Avatar, Tag } from \"antd\";\nimport { PlusOutlined, EditOutlined, DeleteOutlined, ReloadOutlined, UserAddOutlined, UserDeleteOutlined } from \"@ant-design/icons\";\nimport GroupService from \"../../services/groupService\";\nimport UserService from \"../../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst AdminGroupsPage = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isAddUserModalVisible, setIsAddUserModalVisible] = useState(false);\n  const [selectedGroupForUser, setSelectedGroupForUser] = useState(null);\n  const [form] = Form.useForm();\n  const [userForm] = Form.useForm();\n\n  // Fetch data\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Fetch all groups\n      const groupsData = await GroupService.getAllGroups();\n      setGroups(groupsData);\n\n      // Fetch all users\n      const usersData = await UserService.getAllUsers();\n      setUsers(usersData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      message.error(\"Error al cargar los datos\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Modal handlers\n  const showCreateModal = () => {\n    setIsEditMode(false);\n    setSelectedGroup(null);\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n  const showEditModal = group => {\n    var _group$user;\n    setIsEditMode(true);\n    setSelectedGroup(group);\n\n    // Format group data for form\n    const formattedGroup = {\n      ...group,\n      user: (_group$user = group.user) === null || _group$user === void 0 ? void 0 : _group$user.map(user => typeof user === 'string' ? user : user._id)\n    };\n    form.setFieldsValue(formattedGroup);\n    setIsModalVisible(true);\n  };\n  const showAddUserModal = group => {\n    setSelectedGroupForUser(group);\n    userForm.resetFields();\n    setIsAddUserModalVisible(true);\n  };\n  const handleCancel = () => {\n    form.resetFields();\n    setIsModalVisible(false);\n    setSelectedGroup(null);\n  };\n  const handleAddUserCancel = () => {\n    userForm.resetFields();\n    setIsAddUserModalVisible(false);\n    setSelectedGroupForUser(null);\n  };\n\n  // Form handlers\n  const handleFormSubmit = async values => {\n    try {\n      if (isEditMode && selectedGroup) {\n        await GroupService.updateGroup(selectedGroup._id, values);\n        message.success(\"Grupo actualizado con éxito\");\n      } else {\n        await GroupService.createGroup(values);\n        message.success(\"Grupo creado con éxito\");\n      }\n      fetchData();\n      handleCancel();\n    } catch (error) {\n      console.error(\"Error with group operation:\", error);\n      message.error(isEditMode ? \"Error al actualizar el grupo\" : \"Error al crear el grupo\");\n    }\n  };\n  const handleAddUserSubmit = async values => {\n    try {\n      if (!selectedGroupForUser) {\n        message.error(\"No hay grupo seleccionado\");\n        return;\n      }\n      await GroupService.addUserToGroup(selectedGroupForUser._id, values.userId);\n      message.success(\"Usuario añadido al grupo con éxito\");\n      fetchData();\n      handleAddUserCancel();\n    } catch (error) {\n      console.error(\"Error adding user to group:\", error);\n      message.error(\"Error al añadir usuario al grupo\");\n    }\n  };\n\n  // Delete handlers\n  const handleDeleteGroup = async groupId => {\n    try {\n      await GroupService.deleteGroup(groupId);\n      message.success(\"Grupo eliminado con éxito\");\n      fetchData();\n    } catch (error) {\n      console.error(\"Error deleting group:\", error);\n      message.error(\"Error al eliminar el grupo\");\n    }\n  };\n  const handleRemoveUserFromGroup = async (groupId, userId) => {\n    try {\n      await GroupService.removeUserFromGroup(groupId, userId);\n      message.success(\"Usuario eliminado del grupo con éxito\");\n      fetchData();\n    } catch (error) {\n      console.error(\"Error removing user from group:\", error);\n      message.error(\"Error al eliminar usuario del grupo\");\n    }\n  };\n\n  // Helper functions\n  const getUserName = userId => {\n    const user = users.find(u => u._id === userId);\n    return user ? user.username : 'Usuario desconocido';\n  };\n  const getUserEmail = userId => {\n    const user = users.find(u => u._id === userId);\n    return user ? user.email : '';\n  };\n\n  // Get users not in the group\n  const getUsersNotInGroup = group => {\n    if (!group || !group.user) return users;\n    const groupUserIds = group.user.map(user => typeof user === 'string' ? user : user._id);\n    return users.filter(user => !groupUserIds.includes(user._id));\n  };\n\n  // Table columns\n  const columns = [{\n    title: 'Nombre del Grupo',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: (a, b) => a.name.localeCompare(b.name)\n  }, {\n    title: 'Propietario',\n    dataIndex: 'ownerId',\n    key: 'ownerId',\n    render: (ownerId, record) => {\n      const ownerName = typeof ownerId === 'string' ? getUserName(ownerId) : (ownerId === null || ownerId === void 0 ? void 0 : ownerId.username) || 'Desconocido';\n      const ownerEmail = typeof ownerId === 'string' ? getUserEmail(ownerId) : (ownerId === null || ownerId === void 0 ? void 0 : ownerId.email) || '';\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: ownerEmail,\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"blue\",\n          children: ownerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: 'Miembros',\n    dataIndex: 'user',\n    key: 'user',\n    render: (users, record) => {\n      if (!users || users.length === 0) return 'Sin miembros';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '4px'\n        },\n        children: [users.slice(0, 3).map((user, index) => {\n          const userId = typeof user === 'string' ? user : user._id;\n          const username = typeof user === 'string' ? getUserName(userId) : user.username;\n          const email = typeof user === 'string' ? getUserEmail(userId) : user.email;\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${username} (${email})`,\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              closable: true,\n              onClose: e => {\n                e.preventDefault();\n                Modal.confirm({\n                  title: `¿Quieres eliminar al usuario ${username} del grupo?`,\n                  onOk: () => handleRemoveUserFromGroup(record._id, userId)\n                });\n              },\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this);\n        }), users.length > 3 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: `${users.length - 3} usuarios más`,\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            children: [\"+\", users.length - 3]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: 'Total Miembros',\n    dataIndex: 'user',\n    key: 'memberCount',\n    render: users => (users === null || users === void 0 ? void 0 : users.length) || 0,\n    sorter: (a, b) => {\n      var _a$user, _b$user;\n      return (((_a$user = a.user) === null || _a$user === void 0 ? void 0 : _a$user.length) || 0) - (((_b$user = b.user) === null || _b$user === void 0 ? void 0 : _b$user.length) || 0);\n    }\n  }, {\n    title: 'Acciones',\n    key: 'actions',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UserAddOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }, this),\n        onClick: () => showAddUserModal(record),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }, this),\n        onClick: () => showEditModal(record),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"\\xBFEst\\xE1s seguro de eliminar este grupo?\",\n        onConfirm: () => handleDeleteGroup(record._id),\n        okText: \"S\\xED\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 21\n          }, this),\n          danger: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: 24,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        children: \"Gesti\\xF3n de Grupos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this),\n          onClick: showCreateModal,\n          children: \"Nuevo Grupo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this),\n          onClick: fetchData,\n          loading: loading,\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: groups,\n        columns: columns,\n        rowKey: \"_id\",\n        loading: loading,\n        pagination: {\n          pageSize: 10\n        },\n        expandable: {\n          expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 5,\n              children: \"Miembros del Grupo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '8px',\n                marginBottom: 16\n              },\n              children: record.user && record.user.length > 0 ? record.user.map((user, index) => {\n                const userId = typeof user === 'string' ? user : user._id;\n                const username = typeof user === 'string' ? getUserName(userId) : user.username;\n                const email = typeof user === 'string' ? getUserEmail(userId) : user.email;\n                return /*#__PURE__*/_jsxDEV(Tag, {\n                  closable: true,\n                  onClose: () => handleRemoveUserFromGroup(record._id, userId),\n                  style: {\n                    margin: '4px'\n                  },\n                  children: [username, \" (\", email, \")\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                children: \"Sin miembros\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Space, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                size: \"small\",\n                icon: /*#__PURE__*/_jsxDEV(UserAddOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this),\n                onClick: () => showAddUserModal(record),\n                children: \"A\\xF1adir Usuario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: isEditMode ? `Editar Grupo: ${selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.name}` : \"Nuevo Grupo\",\n      open: isModalVisible,\n      onCancel: handleCancel,\n      footer: null,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"name\",\n          label: \"Nombre del Grupo\",\n          rules: [{\n            required: true,\n            message: \"Por favor, ingresa el nombre del grupo\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Nombre del Grupo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"user\",\n          label: \"Miembros\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            placeholder: \"Selecciona usuarios (opcional)\",\n            style: {\n              width: '100%'\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            children: users.map(user => /*#__PURE__*/_jsxDEV(Option, {\n              value: user._id,\n              children: [user.username, \" (\", user.email, \")\"]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: '100%'\n            },\n            loading: loading,\n            children: isEditMode ? \"Actualizar Grupo\" : \"Crear Grupo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: `Añadir Usuario a ${(selectedGroupForUser === null || selectedGroupForUser === void 0 ? void 0 : selectedGroupForUser.name) || 'Grupo'}`,\n      open: isAddUserModalVisible,\n      onCancel: handleAddUserCancel,\n      footer: null,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: userForm,\n        layout: \"vertical\",\n        onFinish: handleAddUserSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userId\",\n          label: \"Usuario\",\n          rules: [{\n            required: true,\n            message: \"Por favor, selecciona un usuario\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Selecciona un usuario\",\n            style: {\n              width: '100%'\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            children: getUsersNotInGroup(selectedGroupForUser).map(user => /*#__PURE__*/_jsxDEV(Option, {\n              value: user._id,\n              children: [user.username, \" (\", user.email, \")\"]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: '100%'\n            },\n            loading: loading,\n            disabled: getUsersNotInGroup(selectedGroupForUser).length === 0,\n            children: \"A\\xF1adir Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminGroupsPage, \"gYFct4tjlYx7yNZXBKnzOzRKU8A=\", false, function () {\n  return [Form.useForm, Form.useForm];\n});\n_c = AdminGroupsPage;\nexport default AdminGroupsPage;\nvar _c;\n$RefreshReg$(_c, \"AdminGroupsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Table","Card","Button","Space","Modal","Form","Select","message","Tooltip","Typography","Input","Popconfirm","Avatar","Tag","PlusOutlined","EditOutlined","DeleteOutlined","ReloadOutlined","UserAddOutlined","UserDeleteOutlined","GroupService","UserService","jsxDEV","_jsxDEV","Title","Text","Option","AdminGroupsPage","_s","groups","setGroups","users","setUsers","loading","setLoading","isModalVisible","setIsModalVisible","isEditMode","setIsEditMode","selectedGroup","setSelectedGroup","isAddUserModalVisible","setIsAddUserModalVisible","selectedGroupForUser","setSelectedGroupForUser","form","useForm","userForm","fetchData","groupsData","getAllGroups","usersData","getAllUsers","error","console","showCreateModal","resetFields","showEditModal","group","_group$user","formattedGroup","user","map","_id","setFieldsValue","showAddUserModal","handleCancel","handleAddUserCancel","handleFormSubmit","values","updateGroup","success","createGroup","handleAddUserSubmit","addUserToGroup","userId","handleDeleteGroup","groupId","deleteGroup","handleRemoveUserFromGroup","removeUserFromGroup","getUserName","find","u","username","getUserEmail","email","getUsersNotInGroup","groupUserIds","filter","includes","columns","title","dataIndex","key","sorter","a","b","name","localeCompare","render","ownerId","record","ownerName","ownerEmail","children","color","fileName","_jsxFileName","lineNumber","columnNumber","length","style","display","flexWrap","gap","slice","index","closable","onClose","e","preventDefault","confirm","onOk","_a$user","_b$user","_","icon","onClick","size","onConfirm","okText","cancelText","danger","justifyContent","marginBottom","alignItems","level","type","dataSource","rowKey","pagination","pageSize","expandable","expandedRowRender","margin","open","onCancel","footer","destroyOnClose","layout","onFinish","Item","label","rules","required","placeholder","mode","width","filterOption","input","option","toLowerCase","indexOf","value","htmlType","disabled","_c","$RefreshReg$"],"sources":["C:/Practicas/taskmanage/frontend/src/Pages/AdminGroups/AdminGroupsPage.jsx"],"sourcesContent":["// src/pages/AdminGroups/AdminGroupsPage.jsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { \r\n  Table, \r\n  Card, \r\n  Button, \r\n  Space, \r\n  Modal, \r\n  Form, \r\n  Select, \r\n  message, \r\n  Tooltip, \r\n  Typography, \r\n  Input,\r\n  Popconfirm,\r\n  Avatar,\r\n  Tag\r\n} from \"antd\";\r\nimport { \r\n  PlusOutlined, \r\n  EditOutlined, \r\n  DeleteOutlined, \r\n  ReloadOutlined,\r\n  UserAddOutlined,\r\n  UserDeleteOutlined\r\n} from \"@ant-design/icons\";\r\nimport GroupService from \"../../services/groupService\";\r\nimport UserService from \"../../services/userService\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst AdminGroupsPage = () => {\r\n  const [groups, setGroups] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [isAddUserModalVisible, setIsAddUserModalVisible] = useState(false);\r\n  const [selectedGroupForUser, setSelectedGroupForUser] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [userForm] = Form.useForm();\r\n\r\n  // Fetch data\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch all groups\r\n      const groupsData = await GroupService.getAllGroups();\r\n      setGroups(groupsData);\r\n      \r\n      // Fetch all users\r\n      const usersData = await UserService.getAllUsers();\r\n      setUsers(usersData);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      message.error(\"Error al cargar los datos\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // Modal handlers\r\n  const showCreateModal = () => {\r\n    setIsEditMode(false);\r\n    setSelectedGroup(null);\r\n    form.resetFields();\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showEditModal = (group) => {\r\n    setIsEditMode(true);\r\n    setSelectedGroup(group);\r\n    \r\n    // Format group data for form\r\n    const formattedGroup = {\r\n      ...group,\r\n      user: group.user?.map(user => typeof user === 'string' ? user : user._id)\r\n    };\r\n    \r\n    form.setFieldsValue(formattedGroup);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showAddUserModal = (group) => {\r\n    setSelectedGroupForUser(group);\r\n    userForm.resetFields();\r\n    setIsAddUserModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setIsModalVisible(false);\r\n    setSelectedGroup(null);\r\n  };\r\n\r\n  const handleAddUserCancel = () => {\r\n    userForm.resetFields();\r\n    setIsAddUserModalVisible(false);\r\n    setSelectedGroupForUser(null);\r\n  };\r\n\r\n  // Form handlers\r\n  const handleFormSubmit = async (values) => {\r\n    try {\r\n      if (isEditMode && selectedGroup) {\r\n        await GroupService.updateGroup(selectedGroup._id, values);\r\n        message.success(\"Grupo actualizado con éxito\");\r\n      } else {\r\n        await GroupService.createGroup(values);\r\n        message.success(\"Grupo creado con éxito\");\r\n      }\r\n      \r\n      fetchData();\r\n      handleCancel();\r\n    } catch (error) {\r\n      console.error(\"Error with group operation:\", error);\r\n      message.error(isEditMode ? \"Error al actualizar el grupo\" : \"Error al crear el grupo\");\r\n    }\r\n  };\r\n\r\n  const handleAddUserSubmit = async (values) => {\r\n    try {\r\n      if (!selectedGroupForUser) {\r\n        message.error(\"No hay grupo seleccionado\");\r\n        return;\r\n      }\r\n      \r\n      await GroupService.addUserToGroup(selectedGroupForUser._id, values.userId);\r\n      message.success(\"Usuario añadido al grupo con éxito\");\r\n      \r\n      fetchData();\r\n      handleAddUserCancel();\r\n    } catch (error) {\r\n      console.error(\"Error adding user to group:\", error);\r\n      message.error(\"Error al añadir usuario al grupo\");\r\n    }\r\n  };\r\n\r\n  // Delete handlers\r\n  const handleDeleteGroup = async (groupId) => {\r\n    try {\r\n      await GroupService.deleteGroup(groupId);\r\n      message.success(\"Grupo eliminado con éxito\");\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error deleting group:\", error);\r\n      message.error(\"Error al eliminar el grupo\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveUserFromGroup = async (groupId, userId) => {\r\n    try {\r\n      await GroupService.removeUserFromGroup(groupId, userId);\r\n      message.success(\"Usuario eliminado del grupo con éxito\");\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error removing user from group:\", error);\r\n      message.error(\"Error al eliminar usuario del grupo\");\r\n    }\r\n  };\r\n\r\n  // Helper functions\r\n  const getUserName = (userId) => {\r\n    const user = users.find(u => u._id === userId);\r\n    return user ? user.username : 'Usuario desconocido';\r\n  };\r\n\r\n  const getUserEmail = (userId) => {\r\n    const user = users.find(u => u._id === userId);\r\n    return user ? user.email : '';\r\n  };\r\n\r\n  // Get users not in the group\r\n  const getUsersNotInGroup = (group) => {\r\n    if (!group || !group.user) return users;\r\n    \r\n    const groupUserIds = group.user.map(user => \r\n      typeof user === 'string' ? user : user._id\r\n    );\r\n    \r\n    return users.filter(user => !groupUserIds.includes(user._id));\r\n  };\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: 'Nombre del Grupo',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: 'Propietario',\r\n      dataIndex: 'ownerId',\r\n      key: 'ownerId',\r\n      render: (ownerId, record) => {\r\n        const ownerName = typeof ownerId === 'string'\r\n          ? getUserName(ownerId)\r\n          : ownerId?.username || 'Desconocido';\r\n        \r\n        const ownerEmail = typeof ownerId === 'string'\r\n          ? getUserEmail(ownerId)\r\n          : ownerId?.email || '';\r\n        \r\n        return (\r\n          <Tooltip title={ownerEmail}>\r\n            <Tag color=\"blue\">{ownerName}</Tag>\r\n          </Tooltip>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Miembros',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      render: (users, record) => {\r\n        if (!users || users.length === 0) return 'Sin miembros';\r\n        \r\n        return (\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '4px' }}>\r\n            {users.slice(0, 3).map((user, index) => {\r\n              const userId = typeof user === 'string' ? user : user._id;\r\n              const username = typeof user === 'string' ? getUserName(userId) : user.username;\r\n              const email = typeof user === 'string' ? getUserEmail(userId) : user.email;\r\n              \r\n              return (\r\n                <Tooltip title={`${username} (${email})`} key={index}>\r\n                  <Tag closable\r\n                    onClose={(e) => {\r\n                      e.preventDefault();\r\n                      Modal.confirm({\r\n                        title: `¿Quieres eliminar al usuario ${username} del grupo?`,\r\n                        onOk: () => handleRemoveUserFromGroup(record._id, userId),\r\n                      });\r\n                    }}\r\n                  >\r\n                    {username}\r\n                  </Tag>\r\n                </Tooltip>\r\n              );\r\n            })}\r\n            {users.length > 3 && (\r\n              <Tooltip title={`${users.length - 3} usuarios más`}>\r\n                <Tag>+{users.length - 3}</Tag>\r\n              </Tooltip>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: 'Total Miembros',\r\n      dataIndex: 'user',\r\n      key: 'memberCount',\r\n      render: (users) => users?.length || 0,\r\n      sorter: (a, b) => (a.user?.length || 0) - (b.user?.length || 0),\r\n    },\r\n    {\r\n      title: 'Acciones',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button \r\n            icon={<UserAddOutlined />} \r\n            onClick={() => showAddUserModal(record)} \r\n            size=\"small\"\r\n          />\r\n          <Button \r\n            icon={<EditOutlined />} \r\n            onClick={() => showEditModal(record)} \r\n            size=\"small\"\r\n          />\r\n          <Popconfirm\r\n            title=\"¿Estás seguro de eliminar este grupo?\"\r\n            onConfirm={() => handleDeleteGroup(record._id)}\r\n            okText=\"Sí\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button \r\n              icon={<DeleteOutlined />} \r\n              danger \r\n              size=\"small\"\r\n            />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 24, alignItems: 'center' }}>\r\n        <Title level={2}>Gestión de Grupos</Title>\r\n        <Space>\r\n          <Button \r\n            type=\"primary\" \r\n            icon={<PlusOutlined />} \r\n            onClick={showCreateModal}\r\n          >\r\n            Nuevo Grupo\r\n          </Button>\r\n          <Button \r\n            icon={<ReloadOutlined />} \r\n            onClick={fetchData}\r\n            loading={loading}\r\n          >\r\n            Actualizar\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n\r\n      <Card>\r\n        <Table \r\n          dataSource={groups}\r\n          columns={columns}\r\n          rowKey=\"_id\"\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n          expandable={{\r\n            expandedRowRender: record => (\r\n              <div>\r\n                <Title level={5}>Miembros del Grupo</Title>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px', marginBottom: 16 }}>\r\n                  {record.user && record.user.length > 0 ? record.user.map((user, index) => {\r\n                    const userId = typeof user === 'string' ? user : user._id;\r\n                    const username = typeof user === 'string' ? getUserName(userId) : user.username;\r\n                    const email = typeof user === 'string' ? getUserEmail(userId) : user.email;\r\n                    \r\n                    return (\r\n                      <Tag \r\n                        key={index} \r\n                        closable\r\n                        onClose={() => handleRemoveUserFromGroup(record._id, userId)}\r\n                        style={{ margin: '4px' }}\r\n                      >\r\n                        {username} ({email})\r\n                      </Tag>\r\n                    );\r\n                  }) : <Text type=\"secondary\">Sin miembros</Text>}\r\n                </div>\r\n                <Space>\r\n                  <Button \r\n                    type=\"primary\" \r\n                    size=\"small\" \r\n                    icon={<UserAddOutlined />}\r\n                    onClick={() => showAddUserModal(record)}\r\n                  >\r\n                    Añadir Usuario\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      {/* Create/Edit Group Modal */}\r\n      <Modal\r\n        title={isEditMode ? `Editar Grupo: ${selectedGroup?.name}` : \"Nuevo Grupo\"}\r\n        open={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onFinish={handleFormSubmit}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Nombre del Grupo\"\r\n            rules={[{ required: true, message: \"Por favor, ingresa el nombre del grupo\" }]}\r\n          >\r\n            <Input placeholder=\"Nombre del Grupo\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"user\"\r\n            label=\"Miembros\"\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              placeholder=\"Selecciona usuarios (opcional)\"\r\n              style={{ width: '100%' }}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {users.map(user => (\r\n                <Option key={user._id} value={user._id}>\r\n                  {user.username} ({user.email})\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%' }}\r\n              loading={loading}\r\n            >\r\n              {isEditMode ? \"Actualizar Grupo\" : \"Crear Grupo\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Add User to Group Modal */}\r\n      <Modal\r\n        title={`Añadir Usuario a ${selectedGroupForUser?.name || 'Grupo'}`}\r\n        open={isAddUserModalVisible}\r\n        onCancel={handleAddUserCancel}\r\n        footer={null}\r\n        destroyOnClose\r\n      >\r\n        <Form\r\n          form={userForm}\r\n          layout=\"vertical\"\r\n          onFinish={handleAddUserSubmit}\r\n        >\r\n          <Form.Item\r\n            name=\"userId\"\r\n            label=\"Usuario\"\r\n            rules={[{ required: true, message: \"Por favor, selecciona un usuario\" }]}\r\n          >\r\n            <Select\r\n              placeholder=\"Selecciona un usuario\"\r\n              style={{ width: '100%' }}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {getUsersNotInGroup(selectedGroupForUser).map(user => (\r\n                <Option key={user._id} value={user._id}>\r\n                  {user.username} ({user.email})\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%' }}\r\n              loading={loading}\r\n              disabled={getUsersNotInGroup(selectedGroupForUser).length === 0}\r\n            >\r\n              Añadir Usuario\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminGroupsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}