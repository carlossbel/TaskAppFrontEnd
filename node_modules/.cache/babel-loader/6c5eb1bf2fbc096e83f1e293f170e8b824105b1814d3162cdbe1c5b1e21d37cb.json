{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practicas\\\\taskmanage\\\\frontend\\\\src\\\\Pages\\\\AdminTasks\\\\AdminTasksPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/AdminTasks/AdminTasksPage.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Table, Card, Button, Space, Modal, Form, Select, message, Tag, Tooltip, Typography, Input, DatePicker, Popconfirm } from \"antd\";\nimport { PlusOutlined, EditOutlined, DeleteOutlined, ReloadOutlined } from \"@ant-design/icons\";\nimport TaskService from \"../../services/taskService\";\nimport GroupService from \"../../services/groupService\";\nimport UserService from \"../../services/userService\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst AdminTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  const [form] = Form.useForm();\n\n  // Fetch data\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Fetch all tasks\n      const tasksData = await TaskService.getAllTasks();\n      setTasks(tasksData);\n\n      // Fetch all users\n      const usersData = await UserService.getAllUsers();\n      setUsers(usersData);\n\n      // Fetch all groups\n      const groupsData = await GroupService.getAllGroups();\n      setGroups(groupsData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      message.error(\"Error al cargar los datos\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Modal handlers\n  const showCreateModal = () => {\n    setIsEditMode(false);\n    setSelectedTask(null);\n    setSelectedGroupId(null);\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n  const showGroupTaskModal = groupId => {\n    setIsEditMode(false);\n    setSelectedTask(null);\n    setSelectedGroupId(groupId);\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n  const showEditModal = task => {\n    var _task$assignedTo;\n    setIsEditMode(true);\n    setSelectedTask(task);\n    setSelectedGroupId(task.groupId);\n\n    // Format date for DatePicker\n    const formattedTask = {\n      ...task,\n      dead_line: task.dead_line ? moment(task.dead_line) : null,\n      assignedTo: (_task$assignedTo = task.assignedTo) === null || _task$assignedTo === void 0 ? void 0 : _task$assignedTo.map(user => typeof user === 'string' ? user : user._id)\n    };\n    form.setFieldsValue(formattedTask);\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    form.resetFields();\n    setIsModalVisible(false);\n    setSelectedTask(null);\n    setSelectedGroupId(null);\n  };\n\n  // Form handlers\n  const handleFormSubmit = async values => {\n    try {\n      const formattedValues = {\n        ...values,\n        dead_line: values.dead_line.toISOString()\n      };\n      if (selectedGroupId) {\n        formattedValues.groupId = selectedGroupId;\n      }\n      if (isEditMode && selectedTask) {\n        await TaskService.updateTask(selectedTask._id, formattedValues);\n        message.success(\"Tarea actualizada con éxito\");\n      } else if (selectedGroupId) {\n        await TaskService.createGroupTask(formattedValues);\n        message.success(\"Tarea de grupo creada con éxito\");\n      } else {\n        await TaskService.createPersonalTask(formattedValues);\n        message.success(\"Tarea personal creada con éxito\");\n      }\n      fetchData();\n      handleCancel();\n    } catch (error) {\n      console.error(\"Error with task operation:\", error);\n      message.error(isEditMode ? \"Error al actualizar la tarea\" : \"Error al crear la tarea\");\n    }\n  };\n\n  // Delete handler\n  const handleDeleteTask = async taskId => {\n    try {\n      await TaskService.deleteTask(taskId);\n      message.success(\"Tarea eliminada con éxito\");\n      fetchData();\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      message.error(\"Error al eliminar la tarea\");\n    }\n  };\n\n  // User and group helpers\n  const getUserName = userId => {\n    const user = users.find(u => u._id === userId);\n    return user ? user.username : 'Usuario desconocido';\n  };\n  const getGroupName = groupId => {\n    const group = groups.find(g => g._id === groupId);\n    return group ? group.name : 'Grupo desconocido';\n  };\n\n  // Table columns\n  const columns = [{\n    title: 'Nombre',\n    dataIndex: 'name_task',\n    key: 'name_task',\n    sorter: (a, b) => a.name_task.localeCompare(b.name_task)\n  }, {\n    title: 'Descripción',\n    dataIndex: 'description',\n    key: 'description',\n    ellipsis: true,\n    render: text => /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: text,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text.length > 30 ? `${text.substring(0, 30)}...` : text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Estado',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => {\n      let color = 'blue';\n      if (status === 'Done') color = 'green';\n      if (status === 'Paused') color = 'orange';\n      if (status === 'Review') color = 'purple';\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 16\n      }, this);\n    },\n    filters: [{\n      text: 'En Progreso',\n      value: 'In Progress'\n    }, {\n      text: 'Hecho',\n      value: 'Done'\n    }, {\n      text: 'Pausado',\n      value: 'Paused'\n    }, {\n      text: 'Revisión',\n      value: 'Review'\n    }],\n    onFilter: (value, record) => record.status === value\n  }, {\n    title: 'Fecha Límite',\n    dataIndex: 'dead_line',\n    key: 'dead_line',\n    render: date => moment(date).format('DD/MM/YYYY'),\n    sorter: (a, b) => moment(a.dead_line).valueOf() - moment(b.dead_line).valueOf()\n  }, {\n    title: 'Categoría',\n    dataIndex: 'category',\n    key: 'category',\n    render: category => category || 'Sin categoría'\n  }, {\n    title: 'Creado por',\n    dataIndex: 'userId',\n    key: 'userId',\n    render: userId => getUserName(userId)\n  }, {\n    title: 'Grupo',\n    dataIndex: 'groupId',\n    key: 'groupId',\n    render: groupId => groupId ? getGroupName(groupId) : 'Personal',\n    filters: [{\n      text: 'Personal',\n      value: 'personal'\n    }, ...groups.map(group => ({\n      text: group.name,\n      value: group._id\n    }))],\n    onFilter: (value, record) => {\n      if (value === 'personal') return !record.groupId;\n      return record.groupId === value;\n    }\n  }, {\n    title: 'Asignada a',\n    dataIndex: 'assignedTo',\n    key: 'assignedTo',\n    render: assignedTo => {\n      if (!assignedTo || assignedTo.length === 0) return 'Sin asignar';\n      const assignedUsers = assignedTo.map(user => {\n        const userId = typeof user === 'string' ? user : user._id;\n        return getUserName(userId);\n      });\n      return assignedUsers.join(', ');\n    }\n  }, {\n    title: 'Acciones',\n    key: 'actions',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }, this),\n        onClick: () => showEditModal(record),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"\\xBFEst\\xE1s seguro de eliminar esta tarea?\",\n        onConfirm: () => handleDeleteTask(record._id),\n        okText: \"S\\xED\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 21\n          }, this),\n          danger: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)\n  }];\n\n  // Group selection for filter\n  const groupFilterOptions = [{\n    label: 'Todas las tareas',\n    value: 'all'\n  }, {\n    label: 'Tareas personales',\n    value: 'personal'\n  }, ...groups.map(group => ({\n    label: group.name,\n    value: group._id\n  }))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: 24,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        children: \"Gesti\\xF3n de Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, this),\n          onClick: showCreateModal,\n          children: \"Nueva Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this),\n          onClick: fetchData,\n          loading: loading,\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Crear tareas para grupos\",\n      style: {\n        marginBottom: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Selecciona un grupo para crear una tarea y asignarla a sus miembros:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '8px'\n          },\n          children: groups.map(group => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => showGroupTaskModal(group._id),\n            children: group.name\n          }, group._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: tasks,\n        columns: columns,\n        rowKey: \"_id\",\n        loading: loading,\n        pagination: {\n          pageSize: 10\n        },\n        expandable: {\n          expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descripci\\xF3n completa:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), \" \", record.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: isEditMode ? \"Editar Tarea\" : selectedGroupId ? `Nueva Tarea para ${getGroupName(selectedGroupId)}` : \"Nueva Tarea Personal\",\n      open: isModalVisible,\n      onCancel: handleCancel,\n      footer: null,\n      destroyOnClose: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"name_task\",\n          label: \"Nombre de la Tarea\",\n          rules: [{\n            required: true,\n            message: \"Por favor, ingresa el nombre de la tarea\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Nombre de la Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"description\",\n          label: \"Descripci\\xF3n\",\n          rules: [{\n            required: true,\n            message: \"Por favor, ingresa una descripción\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Descripci\\xF3n\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"dead_line\",\n          label: \"Fecha L\\xEDmite\",\n          rules: [{\n            required: true,\n            message: \"Por favor, selecciona una fecha\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            style: {\n              width: '100%'\n            },\n            format: \"DD/MM/YYYY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"status\",\n          label: \"Estado\",\n          initialValue: \"In Progress\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"In Progress\",\n              children: \"En Progreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Done\",\n              children: \"Hecho\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Paused\",\n              children: \"Pausado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Review\",\n              children: \"Revisi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"category\",\n          label: \"Categor\\xEDa\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Categor\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), (selectedGroupId || isEditMode && (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.groupId)) && /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"assignedTo\",\n          label: \"Asignar a\",\n          rules: [{\n            required: true,\n            message: \"Por favor, selecciona al menos un usuario\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            mode: \"multiple\",\n            placeholder: \"Selecciona usuarios\",\n            style: {\n              width: '100%'\n            },\n            filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n            children: users.map(user => /*#__PURE__*/_jsxDEV(Option, {\n              value: user._id,\n              children: [user.username, \" (\", user.email, \")\"]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              width: '100%'\n            },\n            loading: loading,\n            children: isEditMode ? \"Actualizar Tarea\" : \"Crear Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminTasksPage, \"6UM9Q+CsEZ30RTodx070TAm2Q0o=\", false, function () {\n  return [Form.useForm];\n});\n_c = AdminTasksPage;\nexport default AdminTasksPage;\nvar _c;\n$RefreshReg$(_c, \"AdminTasksPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Table","Card","Button","Space","Modal","Form","Select","message","Tag","Tooltip","Typography","Input","DatePicker","Popconfirm","PlusOutlined","EditOutlined","DeleteOutlined","ReloadOutlined","TaskService","GroupService","UserService","moment","jsxDEV","_jsxDEV","Title","Text","Option","TextArea","AdminTasksPage","_s","tasks","setTasks","users","setUsers","groups","setGroups","loading","setLoading","isModalVisible","setIsModalVisible","isEditMode","setIsEditMode","selectedTask","setSelectedTask","selectedGroupId","setSelectedGroupId","form","useForm","fetchData","tasksData","getAllTasks","usersData","getAllUsers","groupsData","getAllGroups","error","console","showCreateModal","resetFields","showGroupTaskModal","groupId","showEditModal","task","_task$assignedTo","formattedTask","dead_line","assignedTo","map","user","_id","setFieldsValue","handleCancel","handleFormSubmit","values","formattedValues","toISOString","updateTask","success","createGroupTask","createPersonalTask","handleDeleteTask","taskId","deleteTask","getUserName","userId","find","u","username","getGroupName","group","g","name","columns","title","dataIndex","key","sorter","a","b","name_task","localeCompare","ellipsis","render","text","children","length","substring","fileName","_jsxFileName","lineNumber","columnNumber","status","color","filters","value","onFilter","record","date","format","valueOf","category","assignedUsers","join","_","icon","onClick","size","onConfirm","okText","cancelText","danger","groupFilterOptions","label","style","display","justifyContent","marginBottom","alignItems","level","type","direction","width","flexWrap","gap","dataSource","rowKey","pagination","pageSize","expandable","expandedRowRender","margin","description","open","onCancel","footer","destroyOnClose","layout","onFinish","Item","rules","required","placeholder","rows","initialValue","mode","filterOption","input","option","toLowerCase","indexOf","email","htmlType","_c","$RefreshReg$"],"sources":["C:/Practicas/taskmanage/frontend/src/Pages/AdminTasks/AdminTasksPage.jsx"],"sourcesContent":["// src/pages/AdminTasks/AdminTasksPage.jsx\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { \r\n  Table, \r\n  Card, \r\n  Button, \r\n  Space, \r\n  Modal, \r\n  Form, \r\n  Select, \r\n  message, \r\n  Tag, \r\n  Tooltip, \r\n  Typography,\r\n  Input,\r\n  DatePicker,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport { \r\n  PlusOutlined, \r\n  EditOutlined, \r\n  DeleteOutlined, \r\n  ReloadOutlined\r\n} from \"@ant-design/icons\";\r\nimport TaskService from \"../../services/taskService\";\r\nimport GroupService from \"../../services/groupService\";\r\nimport UserService from \"../../services/userService\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst AdminTasksPage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [groups, setGroups] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\r\n  const [form] = Form.useForm();\r\n\r\n  // Fetch data\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Fetch all tasks\r\n      const tasksData = await TaskService.getAllTasks();\r\n      setTasks(tasksData);\r\n      \r\n      // Fetch all users\r\n      const usersData = await UserService.getAllUsers();\r\n      setUsers(usersData);\r\n      \r\n      // Fetch all groups\r\n      const groupsData = await GroupService.getAllGroups();\r\n      setGroups(groupsData);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      message.error(\"Error al cargar los datos\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // Modal handlers\r\n  const showCreateModal = () => {\r\n    setIsEditMode(false);\r\n    setSelectedTask(null);\r\n    setSelectedGroupId(null);\r\n    form.resetFields();\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showGroupTaskModal = (groupId) => {\r\n    setIsEditMode(false);\r\n    setSelectedTask(null);\r\n    setSelectedGroupId(groupId);\r\n    form.resetFields();\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const showEditModal = (task) => {\r\n    setIsEditMode(true);\r\n    setSelectedTask(task);\r\n    setSelectedGroupId(task.groupId);\r\n    \r\n    // Format date for DatePicker\r\n    const formattedTask = {\r\n      ...task,\r\n      dead_line: task.dead_line ? moment(task.dead_line) : null,\r\n      assignedTo: task.assignedTo?.map(user => typeof user === 'string' ? user : user._id)\r\n    };\r\n    \r\n    form.setFieldsValue(formattedTask);\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    setIsModalVisible(false);\r\n    setSelectedTask(null);\r\n    setSelectedGroupId(null);\r\n  };\r\n\r\n  // Form handlers\r\n  const handleFormSubmit = async (values) => {\r\n    try {\r\n      const formattedValues = {\r\n        ...values,\r\n        dead_line: values.dead_line.toISOString()\r\n      };\r\n      \r\n      if (selectedGroupId) {\r\n        formattedValues.groupId = selectedGroupId;\r\n      }\r\n      \r\n      if (isEditMode && selectedTask) {\r\n        await TaskService.updateTask(selectedTask._id, formattedValues);\r\n        message.success(\"Tarea actualizada con éxito\");\r\n      } else if (selectedGroupId) {\r\n        await TaskService.createGroupTask(formattedValues);\r\n        message.success(\"Tarea de grupo creada con éxito\");\r\n      } else {\r\n        await TaskService.createPersonalTask(formattedValues);\r\n        message.success(\"Tarea personal creada con éxito\");\r\n      }\r\n      \r\n      fetchData();\r\n      handleCancel();\r\n    } catch (error) {\r\n      console.error(\"Error with task operation:\", error);\r\n      message.error(isEditMode ? \"Error al actualizar la tarea\" : \"Error al crear la tarea\");\r\n    }\r\n  };\r\n\r\n  // Delete handler\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await TaskService.deleteTask(taskId);\r\n      message.success(\"Tarea eliminada con éxito\");\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n      message.error(\"Error al eliminar la tarea\");\r\n    }\r\n  };\r\n\r\n  // User and group helpers\r\n  const getUserName = (userId) => {\r\n    const user = users.find(u => u._id === userId);\r\n    return user ? user.username : 'Usuario desconocido';\r\n  };\r\n\r\n  const getGroupName = (groupId) => {\r\n    const group = groups.find(g => g._id === groupId);\r\n    return group ? group.name : 'Grupo desconocido';\r\n  };\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name_task',\r\n      key: 'name_task',\r\n      sorter: (a, b) => a.name_task.localeCompare(b.name_task),\r\n    },\r\n    {\r\n      title: 'Descripción',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      ellipsis: true,\r\n      render: (text) => (\r\n        <Tooltip title={text}>\r\n          <span>{text.length > 30 ? `${text.substring(0, 30)}...` : text}</span>\r\n        </Tooltip>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Estado',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status) => {\r\n        let color = 'blue';\r\n        if (status === 'Done') color = 'green';\r\n        if (status === 'Paused') color = 'orange';\r\n        if (status === 'Review') color = 'purple';\r\n        \r\n        return <Tag color={color}>{status}</Tag>;\r\n      },\r\n      filters: [\r\n        { text: 'En Progreso', value: 'In Progress' },\r\n        { text: 'Hecho', value: 'Done' },\r\n        { text: 'Pausado', value: 'Paused' },\r\n        { text: 'Revisión', value: 'Review' },\r\n      ],\r\n      onFilter: (value, record) => record.status === value,\r\n    },\r\n    {\r\n      title: 'Fecha Límite',\r\n      dataIndex: 'dead_line',\r\n      key: 'dead_line',\r\n      render: (date) => moment(date).format('DD/MM/YYYY'),\r\n      sorter: (a, b) => moment(a.dead_line).valueOf() - moment(b.dead_line).valueOf(),\r\n    },\r\n    {\r\n      title: 'Categoría',\r\n      dataIndex: 'category',\r\n      key: 'category',\r\n      render: (category) => category || 'Sin categoría',\r\n    },\r\n    {\r\n      title: 'Creado por',\r\n      dataIndex: 'userId',\r\n      key: 'userId',\r\n      render: (userId) => getUserName(userId),\r\n    },\r\n    {\r\n      title: 'Grupo',\r\n      dataIndex: 'groupId',\r\n      key: 'groupId',\r\n      render: (groupId) => groupId ? getGroupName(groupId) : 'Personal',\r\n      filters: [\r\n        { text: 'Personal', value: 'personal' },\r\n        ...groups.map(group => ({ text: group.name, value: group._id })),\r\n      ],\r\n      onFilter: (value, record) => {\r\n        if (value === 'personal') return !record.groupId;\r\n        return record.groupId === value;\r\n      },\r\n    },\r\n    {\r\n      title: 'Asignada a',\r\n      dataIndex: 'assignedTo',\r\n      key: 'assignedTo',\r\n      render: (assignedTo) => {\r\n        if (!assignedTo || assignedTo.length === 0) return 'Sin asignar';\r\n        \r\n        const assignedUsers = assignedTo.map(user => {\r\n          const userId = typeof user === 'string' ? user : user._id;\r\n          return getUserName(userId);\r\n        });\r\n        \r\n        return assignedUsers.join(', ');\r\n      },\r\n    },\r\n    {\r\n      title: 'Acciones',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button \r\n            icon={<EditOutlined />} \r\n            onClick={() => showEditModal(record)} \r\n            size=\"small\"\r\n          />\r\n          <Popconfirm\r\n            title=\"¿Estás seguro de eliminar esta tarea?\"\r\n            onConfirm={() => handleDeleteTask(record._id)}\r\n            okText=\"Sí\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button \r\n              icon={<DeleteOutlined />} \r\n              danger \r\n              size=\"small\"\r\n            />\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Group selection for filter\r\n  const groupFilterOptions = [\r\n    { label: 'Todas las tareas', value: 'all' },\r\n    { label: 'Tareas personales', value: 'personal' },\r\n    ...groups.map(group => ({\r\n      label: group.name,\r\n      value: group._id\r\n    }))\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 24, alignItems: 'center' }}>\r\n        <Title level={2}>Gestión de Tareas</Title>\r\n        <Space>\r\n          <Button \r\n            type=\"primary\" \r\n            icon={<PlusOutlined />} \r\n            onClick={showCreateModal}\r\n          >\r\n            Nueva Tarea\r\n          </Button>\r\n          <Button \r\n            icon={<ReloadOutlined />} \r\n            onClick={fetchData}\r\n            loading={loading}\r\n          >\r\n            Actualizar\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n      \r\n      <Card title=\"Crear tareas para grupos\" style={{ marginBottom: 24 }}>\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <Text>Selecciona un grupo para crear una tarea y asignarla a sus miembros:</Text>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n            {groups.map(group => (\r\n              <Button \r\n                key={group._id}\r\n                onClick={() => showGroupTaskModal(group._id)}\r\n              >\r\n                {group.name}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </Space>\r\n      </Card>\r\n\r\n      <Card>\r\n        <Table \r\n          dataSource={tasks}\r\n          columns={columns}\r\n          rowKey=\"_id\"\r\n          loading={loading}\r\n          pagination={{ pageSize: 10 }}\r\n          expandable={{\r\n            expandedRowRender: record => (\r\n              <p style={{ margin: 0 }}>\r\n                <strong>Descripción completa:</strong> {record.description}\r\n              </p>\r\n            ),\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <Modal\r\n        title={\r\n          isEditMode \r\n            ? \"Editar Tarea\" \r\n            : selectedGroupId \r\n              ? `Nueva Tarea para ${getGroupName(selectedGroupId)}` \r\n              : \"Nueva Tarea Personal\"\r\n        }\r\n        open={isModalVisible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n        destroyOnClose\r\n      >\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onFinish={handleFormSubmit}\r\n        >\r\n          <Form.Item\r\n            name=\"name_task\"\r\n            label=\"Nombre de la Tarea\"\r\n            rules={[{ required: true, message: \"Por favor, ingresa el nombre de la tarea\" }]}\r\n          >\r\n            <Input placeholder=\"Nombre de la Tarea\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"description\"\r\n            label=\"Descripción\"\r\n            rules={[{ required: true, message: \"Por favor, ingresa una descripción\" }]}\r\n          >\r\n            <TextArea placeholder=\"Descripción\" rows={4} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"dead_line\"\r\n            label=\"Fecha Límite\"\r\n            rules={[{ required: true, message: \"Por favor, selecciona una fecha\" }]}\r\n          >\r\n            <DatePicker style={{ width: '100%' }} format=\"DD/MM/YYYY\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"status\"\r\n            label=\"Estado\"\r\n            initialValue=\"In Progress\"\r\n          >\r\n            <Select>\r\n              <Option value=\"In Progress\">En Progreso</Option>\r\n              <Option value=\"Done\">Hecho</Option>\r\n              <Option value=\"Paused\">Pausado</Option>\r\n              <Option value=\"Review\">Revisión</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"category\"\r\n            label=\"Categoría\"\r\n          >\r\n            <Input placeholder=\"Categoría\" />\r\n          </Form.Item>\r\n\r\n          {/* Solo mostrar selección de usuarios si es tarea de grupo */}\r\n          {(selectedGroupId || (isEditMode && selectedTask?.groupId)) && (\r\n            <Form.Item\r\n              name=\"assignedTo\"\r\n              label=\"Asignar a\"\r\n              rules={[{ required: true, message: \"Por favor, selecciona al menos un usuario\" }]}\r\n            >\r\n              <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"Selecciona usuarios\"\r\n                style={{ width: '100%' }}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {users.map(user => (\r\n                  <Option key={user._id} value={user._id}>\r\n                    {user.username} ({user.email})\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{ width: '100%' }}\r\n              loading={loading}\r\n            >\r\n              {isEditMode ? \"Actualizar Tarea\" : \"Crear Tarea\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTasksPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}