{"ast":null,"code":"// src/services/interceptors.js\nimport axios from 'axios';\nconst API_URL = 'https://taskappbackend-gywh.onrender.com/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Obtener usuario completo desde localStorage\n  const userStr = localStorage.getItem('user');\n  let token = null;\n  if (userStr) {\n    try {\n      const user = JSON.parse(userStr);\n      token = user.token;\n    } catch (e) {\n      console.error('Error parsing user from localStorage', e);\n    }\n  }\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Handle authentication errors\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n\n    // Clear user data and redirect to login\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n    return Promise.reject(error);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","userStr","localStorage","getItem","token","user","JSON","parse","e","console","error","Promise","reject","response","_error$response","originalRequest","status","_retry","removeItem","window","location","href"],"sources":["C:/Practicas/taskmanage/frontend/src/services/interceptors.js"],"sourcesContent":["// src/services/interceptors.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'https://taskappbackend-gywh.onrender.com/api';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Obtener usuario completo desde localStorage\r\n    const userStr = localStorage.getItem('user');\r\n    let token = null;\r\n    \r\n    if (userStr) {\r\n      try {\r\n        const user = JSON.parse(userStr);\r\n        token = user.token;\r\n      } catch (e) {\r\n        console.error('Error parsing user from localStorage', e);\r\n      }\r\n    }\r\n    \r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const originalRequest = error.config;\r\n    \r\n    // Handle authentication errors\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      // Clear user data and redirect to login\r\n      localStorage.removeItem('user');\r\n      \r\n      window.location.href = '/login';\r\n      return Promise.reject(error);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8CAA8C;;AAE9D;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC5C,IAAIC,KAAK,GAAG,IAAI;EAEhB,IAAIH,OAAO,EAAE;IACX,IAAI;MACF,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC;MAChCG,KAAK,GAAGC,IAAI,CAACD,KAAK;IACpB,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,CAAC,CAAC;IAC1D;EACF;EAEA,IAAIJ,KAAK,EAAE;IACTJ,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUQ,KAAK,EAAE;EACrD;EACA,OAAOJ,MAAM;AACf,CAAC,EACAU,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,GAAG,CAACI,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC1Bc,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,MAAMC,eAAe,GAAGL,KAAK,CAACV,MAAM;;EAEpC;EACA,IAAI,EAAAc,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;;IAE7B;IACAf,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;IAE/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}