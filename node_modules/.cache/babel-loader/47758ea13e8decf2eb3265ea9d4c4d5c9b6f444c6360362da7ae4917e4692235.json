{"ast":null,"code":"// src/services/taskService.js\nimport api from './interceptors';\nconst TaskService = {\n  // Get user tasks\n  getUserTasks: async userId => {\n    try {\n      const response = await api.get(`/tasks/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n      throw error;\n    }\n  },\n  // Create personal task\n  createPersonalTask: async taskData => {\n    const response = await api.post('/tasks', taskData);\n    return response.data;\n  },\n  // Create group task\n  createGroupTask: async taskData => {\n    const response = await api.post('/tasks/group', taskData);\n    return response.data;\n  },\n  // Update task\n  updateTask: async (taskId, taskData) => {\n    const response = await api.put(`/tasks/${taskId}`, taskData);\n    return response.data;\n  },\n  // Update task status\n  updateTaskStatus: async (taskId, status) => {\n    const response = await api.put(`/tasks/${taskId}`, {\n      status\n    });\n    return response.data;\n  },\n  // Delete task\n  deleteTask: async taskId => {\n    const response = await api.delete(`/tasks/${taskId}`);\n    return response.data;\n  },\n  // Get all tasks (admin only)\n  getAllTasks: async () => {\n    const response = await api.get('/tasks');\n    return response.data;\n  }\n};\nexport default TaskService;","map":{"version":3,"names":["api","TaskService","getUserTasks","userId","response","get","data","error","console","createPersonalTask","taskData","post","createGroupTask","updateTask","taskId","put","updateTaskStatus","status","deleteTask","delete","getAllTasks"],"sources":["C:/Practicas/taskmanage/frontend/src/services/taskService.js"],"sourcesContent":["// src/services/taskService.js\r\nimport api from './interceptors';\r\n\r\nconst TaskService = {\r\n  // Get user tasks\r\n  getUserTasks: async (userId) => {\r\n    try {\r\n      const response = await api.get(`/tasks/${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create personal task\r\n  createPersonalTask: async (taskData) => {\r\n    const response = await api.post('/tasks', taskData);\r\n    return response.data;\r\n  },\r\n\r\n  // Create group task\r\n  createGroupTask: async (taskData) => {\r\n    const response = await api.post('/tasks/group', taskData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update task\r\n  updateTask: async (taskId, taskData) => {\r\n    const response = await api.put(`/tasks/${taskId}`, taskData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update task status\r\n  updateTaskStatus: async (taskId, status) => {\r\n    const response = await api.put(`/tasks/${taskId}`, { status });\r\n    return response.data;\r\n  },\r\n\r\n  // Delete task\r\n  deleteTask: async (taskId) => {\r\n    const response = await api.delete(`/tasks/${taskId}`);\r\n    return response.data;\r\n  },\r\n  \r\n  // Get all tasks (admin only)\r\n  getAllTasks: async () => {\r\n    const response = await api.get('/tasks');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default TaskService;"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,gBAAgB;AAEhC,MAAMC,WAAW,GAAG;EAClB;EACAC,YAAY,EAAE,MAAOC,MAAM,IAAK;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,UAAUF,MAAM,EAAE,CAAC;MAClD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,kBAAkB,EAAE,MAAOC,QAAQ,IAAK;IACtC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACnD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,eAAe,EAAE,MAAOF,QAAQ,IAAK;IACnC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,cAAc,EAAED,QAAQ,CAAC;IACzD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAO,UAAU,EAAE,MAAAA,CAAOC,MAAM,EAAEJ,QAAQ,KAAK;IACtC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAEJ,QAAQ,CAAC;IAC5D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAU,gBAAgB,EAAE,MAAAA,CAAOF,MAAM,EAAEG,MAAM,KAAK;IAC1C,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAE;MAAEG;IAAO,CAAC,CAAC;IAC9D,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,UAAU,EAAE,MAAOJ,MAAM,IAAK;IAC5B,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,MAAM,CAAC,UAAUL,MAAM,EAAE,CAAC;IACrD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAc,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}