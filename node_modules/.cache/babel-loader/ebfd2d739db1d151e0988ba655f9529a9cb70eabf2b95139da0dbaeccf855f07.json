{"ast":null,"code":"// src/services/groupService.js\nimport api from './interceptors';\nconst GroupService = {\n  // Get user groups\n  getUserGroups: async userId => {\n    try {\n      const response = await api.get(`/groups/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching groups:\", error);\n      throw error;\n    }\n  },\n  // Create group\n  createGroup: async groupData => {\n    const response = await api.post('/groups', groupData);\n    return response.data.group;\n  },\n  // Update group\n  updateGroup: async (groupId, groupData) => {\n    const response = await api.put(`/groups/${groupId}`, groupData);\n    return response.data.group;\n  },\n  // Delete group\n  deleteGroup: async groupId => {\n    const response = await api.delete(`/groups/${groupId}`);\n    return response.data;\n  },\n  // Add user to group\n  addUserToGroup: async (groupId, userId) => {\n    const response = await api.post(`/groups/${groupId}/users`, {\n      userId\n    });\n    return response.data.group;\n  },\n  // Remove user from group\n  removeUserFromGroup: async (groupId, userId) => {\n    const response = await api.delete(`/groups/${groupId}/users/${userId}`);\n    return response.data.group;\n  },\n  // Get all groups (admin only)\n  getAllGroups: async () => {\n    const response = await api.get('/groups');\n    return response.data;\n  }\n};\nexport default GroupService;","map":{"version":3,"names":["api","GroupService","getUserGroups","userId","response","get","data","error","console","createGroup","groupData","post","group","updateGroup","groupId","put","deleteGroup","delete","addUserToGroup","removeUserFromGroup","getAllGroups"],"sources":["C:/Practicas/taskmanage/frontend/src/services/groupService.js"],"sourcesContent":["// src/services/groupService.js\r\nimport api from './interceptors';\r\n\r\nconst GroupService = {\r\n  // Get user groups\r\n  getUserGroups: async (userId) => {\r\n    try {\r\n      const response = await api.get(`/groups/${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching groups:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create group\r\n  createGroup: async (groupData) => {\r\n    const response = await api.post('/groups', groupData);\r\n    return response.data.group;\r\n  },\r\n\r\n  // Update group\r\n  updateGroup: async (groupId, groupData) => {\r\n    const response = await api.put(`/groups/${groupId}`, groupData);\r\n    return response.data.group;\r\n  },\r\n\r\n  // Delete group\r\n  deleteGroup: async (groupId) => {\r\n    const response = await api.delete(`/groups/${groupId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Add user to group\r\n  addUserToGroup: async (groupId, userId) => {\r\n    const response = await api.post(`/groups/${groupId}/users`, { userId });\r\n    return response.data.group;\r\n  },\r\n\r\n  // Remove user from group\r\n  removeUserFromGroup: async (groupId, userId) => {\r\n    const response = await api.delete(`/groups/${groupId}/users/${userId}`);\r\n    return response.data.group;\r\n  },\r\n  \r\n  // Get all groups (admin only)\r\n  getAllGroups: async () => {\r\n    const response = await api.get('/groups');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default GroupService;"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,gBAAgB;AAEhC,MAAMC,YAAY,GAAG;EACnB;EACAC,aAAa,EAAE,MAAOC,MAAM,IAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAWF,MAAM,EAAE,CAAC;MACnD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,WAAW,EAAE,MAAOC,SAAS,IAAK;IAChC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;IACrD,OAAON,QAAQ,CAACE,IAAI,CAACM,KAAK;EAC5B,CAAC;EAED;EACAC,WAAW,EAAE,MAAAA,CAAOC,OAAO,EAAEJ,SAAS,KAAK;IACzC,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,WAAWD,OAAO,EAAE,EAAEJ,SAAS,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI,CAACM,KAAK;EAC5B,CAAC;EAED;EACAI,WAAW,EAAE,MAAOF,OAAO,IAAK;IAC9B,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,MAAM,CAAC,WAAWH,OAAO,EAAE,CAAC;IACvD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAY,cAAc,EAAE,MAAAA,CAAOJ,OAAO,EAAEX,MAAM,KAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,WAAWG,OAAO,QAAQ,EAAE;MAAEX;IAAO,CAAC,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI,CAACM,KAAK;EAC5B,CAAC;EAED;EACAO,mBAAmB,EAAE,MAAAA,CAAOL,OAAO,EAAEX,MAAM,KAAK;IAC9C,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,MAAM,CAAC,WAAWH,OAAO,UAAUX,MAAM,EAAE,CAAC;IACvE,OAAOC,QAAQ,CAACE,IAAI,CAACM,KAAK;EAC5B,CAAC;EAED;EACAQ,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}