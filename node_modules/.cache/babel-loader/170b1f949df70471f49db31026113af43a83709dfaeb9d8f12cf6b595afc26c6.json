{"ast":null,"code":"var _jsxFileName = \"C:\\\\Practicas\\\\taskmanage\\\\frontend\\\\src\\\\routes\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// src/routes/ProtectedRoute.jsx\nimport React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { message } from 'antd';\nimport AuthService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  adminOnly = false\n}) => {\n  _s();\n  const location = useLocation();\n  const isAuthenticated = AuthService.isAuthenticated();\n  const isAdmin = AuthService.isAdmin();\n  useEffect(() => {\n    console.log('ProtectedRoute check:', {\n      isAuthenticated,\n      adminOnly,\n      isAdmin\n    });\n    if (!isAuthenticated) {\n      message.error('Debes iniciar sesión para acceder a esta página');\n      // Clear any leftover data\n      AuthService.logout();\n    } else if (adminOnly && !isAdmin) {\n      message.error('No tienes permiso para acceder a esta página');\n    }\n  }, [isAuthenticated, adminOnly, isAdmin]);\n  if (!isAuthenticated) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (adminOnly && !isAdmin) {\n    // Redirect to dashboard if not admin\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useLocation","message","AuthService","jsxDEV","_jsxDEV","ProtectedRoute","children","adminOnly","_s","location","isAuthenticated","isAdmin","console","log","error","logout","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Practicas/taskmanage/frontend/src/routes/ProtectedRoute.jsx"],"sourcesContent":["// src/routes/ProtectedRoute.jsx\r\nimport React, { useEffect } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { message } from 'antd';\r\nimport AuthService from '../services/authService';\r\n\r\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\r\n  const location = useLocation();\r\n  const isAuthenticated = AuthService.isAuthenticated();\r\n  const isAdmin = AuthService.isAdmin();\r\n  \r\n  useEffect(() => {\r\n    console.log('ProtectedRoute check:', { isAuthenticated, adminOnly, isAdmin });\r\n    \r\n    if (!isAuthenticated) {\r\n      message.error('Debes iniciar sesión para acceder a esta página');\r\n      // Clear any leftover data\r\n      AuthService.logout();\r\n    } else if (adminOnly && !isAdmin) {\r\n      message.error('No tienes permiso para acceder a esta página');\r\n    }\r\n  }, [isAuthenticated, adminOnly, isAdmin]);\r\n\r\n  if (!isAuthenticated) {\r\n    // Redirect to login if not authenticated\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  if (adminOnly && !isAdmin) {\r\n    // Redirect to dashboard if not admin\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,MAAM;AAC9B,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,eAAe,GAAGR,WAAW,CAACQ,eAAe,CAAC,CAAC;EACrD,MAAMC,OAAO,GAAGT,WAAW,CAACS,OAAO,CAAC,CAAC;EAErCb,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;MAAEH,eAAe;MAAEH,SAAS;MAAEI;IAAQ,CAAC,CAAC;IAE7E,IAAI,CAACD,eAAe,EAAE;MACpBT,OAAO,CAACa,KAAK,CAAC,iDAAiD,CAAC;MAChE;MACAZ,WAAW,CAACa,MAAM,CAAC,CAAC;IACtB,CAAC,MAAM,IAAIR,SAAS,IAAI,CAACI,OAAO,EAAE;MAChCV,OAAO,CAACa,KAAK,CAAC,8CAA8C,CAAC;IAC/D;EACF,CAAC,EAAE,CAACJ,eAAe,EAAEH,SAAS,EAAEI,OAAO,CAAC,CAAC;EAEzC,IAAI,CAACD,eAAe,EAAE;IACpB;IACA,oBAAON,OAAA,CAACL,QAAQ;MAACiB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,IAAIhB,SAAS,IAAI,CAACI,OAAO,EAAE;IACzB;IACA,oBAAOP,OAAA,CAACL,QAAQ;MAACiB,EAAE,EAAC,YAAY;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,OAAOjB,QAAQ;AACjB,CAAC;AAACE,EAAA,CA5BIH,cAAc;EAAA,QACDL,WAAW;AAAA;AAAAwB,EAAA,GADxBnB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}